name: 🏗️ Build For Android
on:
  workflow_call:
jobs:
  build-android:
    name: 🤖 Build Android For aarch64-linux-android
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
      - name: ⚙️ Set Up Rust for Android
        uses: dtolnay/rust-toolchain@stable
        with:
          target: aarch64-linux-android
          components: rustfmt, clippy
      - name: 🧰 Configure Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          unzip android-ndk-r25c-linux.zip
          echo "ANDROID_NDK_HOME=$PWD/android-ndk-r25c" >> $GITHUB_ENV
          rustup target add aarch64-linux-android
          echo "CC_aarch64_linux_android=$PWD/android-ndk-r25c/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=$PWD/android-ndk-r25c/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
      - name: 🛠️ Build Android Binary
        run: cargo build --target aarch64-linux-android --release
        env:
          CC: ${{ env.CC_aarch64_linux_android }}
          AR: ${{ env.ANDROID_NDK_HOME }}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
      - name: 📦 Package Artifacts (tar.gz)
        shell: bash
        run: |
          mkdir -p release
          cp target/aarch64-linux-android/release/getquotes release/
          tar -czvf getquotes-aarch64-linux-android.tar.gz -C release getquotes -C ../ man/getquotes.1 LICENSE completions/
      - name: 🚢 Upload Android Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-arm64
          path: getquotes-aarch64-linux-android.tar.gz
